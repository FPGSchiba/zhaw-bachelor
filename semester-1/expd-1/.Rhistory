mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
klasse$alter[which.min(klasse$alter)] <- NA
klasse$alter[which.max(klasse$alter)] <- NA
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
# I
klasse$ratHKgr <- NA
?which
klasse$handspanne <- as.numeric(klasse$handspanne)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(0.11 < (klasse$handspanne / klasse$koerpergroesse) & (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
gross_sel <- which((klasse$handspanne / klasse$koerpergroesse) > 0.12)
klein_sel
mittel_sel
gross_sel
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr[mittel_sel] <- "mittel"
klasse$ratHKgr[gross_sel] <- "gross"
klasse$ratHKgr
# J
klasse$ID <- klasse[paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-"),"ID"]
klasse$ID
paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-")
# J
klasse$ID <- paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-")
klasse$ID
# K
write.xlsx(klasse, "./data/selfOutpu.xlsx")
csv_path <- paste(getwd(), '/data/BEV322OD3222.csv')
dat <- read.csv('.//data/BEV322OD3222.csv')
str(dat)
dat
plot(dat$AnzBestWir, type = "o")
plot(dat$AnzBestWir,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
lines(t, type = "o", col = "blue")
str(dat)
unbekannt <- dat[dat$SexLang == "unbekannt",]
unbekannt
unbekannt_schweizer <- unbekannt[unbekannt$HerkunftCd == 1,]
unbekannt_ausländer <- unbekannt[unbekannt$HerkunftCd == 2,]
plot(unbekannt_schweizer$AnzBestWir,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
?plot
?plot
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Schweizer Bevölkerung in der Stadt Zürich",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Schweizer Bevölkerung in der Stadt Zürich",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
lines(unbekannt_ausländer$AnzBestWir, type = "o", col = "blue")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer, unbekannt_ausländer), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer, unbekannt_ausländer), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
?cbind
matplot(unbekannt$StichtagDatJahr, c(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
length(unbekannt_schweizer)
length(unbekannt_ausländer)
length(unbekannt_schweizer$AnzBestWir)
length(unbekannt_ausländer$AnzBestWir)
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
nt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
gesamt_bev <- c(unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir, bev_schweizer_m + bev_schweizer_w + bev_ausländer_m + bev_ausländer_w)
plot(x=dat$StichtagDatJahr, y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
str(unbekannt_ausländer)
test <- unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir
test
bekannt_gesamt <- bev_schweizer_m + bev_schweizer_w + bev_ausländer_m + bev_ausländer_w
unbekannt_gesamt <- unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir
bekannt_gesamt <- bev_schweizer_m$AnzBestWir + bev_schweizer_w$AnzBestWir + bev_ausländer_m$AnzBestWir + bev_ausländer_w$AnzBestWir
gesamt_bev <- c(unbekannt_gesamt, bekannt_gesamt)
plot(x=dat$StichtagDatJahr, y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
duplicated(dat$StichtagDatJahr)
plot(x=dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)]
length(dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)])
length(gesamt_bev)
length(dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)])
length(dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)])
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
median(gesamt_bev)
mean(gesamt_bev)
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung")
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (ab 1933, bis 2022)")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
str(dat)
dat <- read.csv('./data/BEV322OD3222.csv')
str(dat)
# ---- Aufgabe 4 ----
munis <- c(53.9, 54.3, 54.6, 54.6, 54.9, 55.9, 55.1, 55.2, 55.5, 55.5, 55.5, 55.5, 55.6, 55.8, 51.2, 51.4, 51.9, 51.9, 52.1, 52.6, 52.9, 52.9, 52.9, 53, 53.1, 53.1, 53.3, 55.9, 56.1, 56.1, 56.2, 56.7, 56.9, 56.9, 56.9, 57.4, 57.5, 58.8, 59.6, 53.3, 53.4, 54, 54, 54.1, 54.2, 54.6, 54.6, 54.6, 54.7, 54.8, 54.8)
table_munis <- table(munis)
median(munis)
quantile(munis)
max(munis)
IQR(munis)
IQR(munis) * 1.5
55.85+3.825
53.3-3.825
min(munis)
# ---- Aufgabe 5 ----
klasse_raw <- read.xlsx("./data/datDS23t_raw.xlsx")
# ---- Aufgabe 5 ----
library(openxlsx)
klasse_raw <- read.xlsx("./data/datDS23t_raw.xlsx")
hist(klasse_raw$Q00_Koerpergroesse)
klasse_raw$Q00_Koerpergroesse <- as.numeric(klasse_raw$Q00_Koerpergroesse)
hist(klasse_raw$Q00_Koerpergroesse)
var(klasse_raw$Q00_Koerpergroesse)
var(klasse_raw$Q00_Koerpergroesse, na.rm = T)
mad(klasse_raw$Q00_Koerpergroesse, na.rm = T)
IQR(klasse_raw$Q00_Koerpergroesse, na.rm = T)
sd(klasse_raw$Q00_Koerpergroesse, na.rm = T)
# C
klasse_raw$Q00_Koerpergroesse
boxplot(munis)
# ---- Boxplot ----
munis <- c(53.9, 54.3, 54.6, 54.6, 54.9, 55.9, 55.1, 55.2, 55.5, 55.5, 55.5, 55.5, 55.6, 55.8, 51.2, 51.4, 51.9, 51.9, 52.1, 52.6, 52.9, 52.9, 52.9, 53, 53.1, 53.1, 53.3, 55.9, 56.1, 56.1, 56.2, 56.7, 56.9, 56.9, 56.9, 57.4, 57.5, 58.8, 59.6, 53.3, 53.4, 54, 54, 54.1, 54.2, 54.6, 54.6, 54.6, 54.7, 54.8, 54.8)
boxplot(munis)
# ---- Boxplot ----
munis <- c(53.9, 54.3, 54.6, 54.6, 54.9, 55.9, 55.1, 55.2, 55.5, 55.5, 55.5, 55.5, 55.6, 55.8, 51.2, 51.4, 51.9, 51.9, 52.1, 52.6, 52.9, 52.9, 52.9, 53, 53.1, 53.1, 53.3, 55.9, 56.1, 56.1, 56.2, 56.7, 56.9, 56.9, 56.9, 57.4, 57.5, 58.8, 59.6, 53.3, 53.4, 54, 54, 54.1, 54.2, 54.6, 54.6, 54.6, 54.7, 54.8, 54.8, 70)
boxplot(munis)
boxplot(munis)
# ---- Boxplot ----
munis <- c(53.9, 54.3, 54.6, 54.6, 54.9, 55.9, 55.1, 55.2, 55.5, 55.5, 55.5, 55.5, 55.6, 55.8, 51.2, 51.4, 51.9, 51.9, 52.1, 52.6, 52.9, 52.9, 52.9, 53, 53.1, 53.1, 53.3, 55.9, 56.1, 56.1, 56.2, 56.7, 56.9, 56.9, 56.9, 57.4, 57.5, 58.8, 59.6, 53.3, 53.4, 54, 54, 54.1, 54.2, 54.6, 54.6, 54.6, 54.7, 54.8, 54.8)
boxplot(munis)
stripchart(munis)
# ---- Aufgabe 1----
read.table('./data/imports85.txt', sep = '\t')
# ---- Aufgabe 1----
dat <- read.table('./data/imports85.txt', sep = '\t')
# ---- Aufgabe 1----
dat <- read.table('./data/imports85.txt', sep = '\t', header = T)
dat
# A
dat$cyl <- factor(dat$cyl, levels = c('two', 'four', 'six', 'eight', 'ten', 'twelve'))
mosaicplot(table(dat$cyl, dat$wheels))
mosaicplot(table(dat$cyl, dat$wheels), las = 2)
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders")
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart")
# A
dat$cyl <- factor(dat$cyl, levels = c('two', 'four', 'six', 'eight', 'twelve'))
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart")
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart", col = c("blue", "red", "black"))
mosaicplot(table(dat$wheels, dat$cyl), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart", col = c("blue", "red", "black"))
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart", col = c("blue", "red", "black"))
# B
barplot(table(dat$cyl, dat$wheels))
# B
barplot(table(dat$cyl, dat$wheels), xlab = "", legend.text = T)
# B
barplot(table(dat$cyl, dat$wheels), ylab = "Relative Häufigkeit", legend.text = T)
mosaicplot(table(dat$cyl, dat$wheels), las = 2, xlab = "Number of Cylinders", ylab = "Antriebsart", col = c("orange", "orange3", "tomato", "tomato3", "beige", "brown1"))
# B
barplot(table(dat$cyl, dat$wheels), ylab = "Relative Häufigkeit", legend.text = T, col = c("orange", "orange3", "tomato", "tomato3", "beige", "brown1"))
barplot(table(dat$cyl, dat$wheels), ylab = "Relative Häufigkeit", legend.text = T, col = c("orange", "orange3", "tomato", "tomato3", "beige", "brown1"), beside = T)
dat$price
# C
par(mfrow=c(1,2))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
boxplot(price ~ cyl, data=dat, log=2) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
boxplot(price ~ cyl, data=dat, log=T) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(1,1))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(1,2))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(2,2))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(1,1))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(1,2))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
# C
par(mfrow=c(1,1))
boxplot(price ~ cyl, data=dat) # zivilstand = Faktor, Sequenz geordnet -> Faktor ordnet richtig ein
stripchart(price ~ cyl, data=dat)
stripchart(price ~ cyl, data=dat, vertical=T)
stripchart(price ~ cyl, data=dat, vertical=T, method='stack')
dat <- read.xlsx('./data/datDS23t.xlsx')
# ---- Aufgabe 2 ----
library(openxlsx)
dat <- read.xlsx('./data/datDS23t.xlsx')
str(dat)
quantile(dat$anreisezeit_an_die_zhaw)
quantile(dat$anreisezeit_an_die_zhaw, na.rm = T)
# B
?quantile
quantile(dat$anreisezeit_an_die_zhaw, probs = c(0.9))
quantile(dat$anreisezeit_an_die_zhaw, probs = c(0.9), na.rm = T)
# C
boxplot(dat$anreisezeit_an_die_zhaw)
hist(dat$anreisezeit_an_die_zhaw)
# D
mosaicplot(table(dat$geschlecht, dat$programmierkenntnisse))
# D
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'))
mosaicplot(table(dat$geschlecht, dat$programmierkenntnisse))
mosaicplot(table(dat$geschlecht, dat$programmierkenntnisse), las = 2)
mosaicplot(table(dat$geschlecht, dat$programmierkenntnisse), las = 2, col=c("black", "rosybrown3", "limegreen", "green"))
barplot(table(dat$geschlecht, dat$programmierkenntnisse), col = c("black", "rosybrown3", "limegreen", "green"))
barplot(table(dat$geschlecht, dat$programmierkenntnisse), col = c("black", "rosybrown3", "limegreen", "green"), legend.text = T)
barplot(table(dat$geschlecht, dat$programmierkenntnisse), col = c("black", "rosybrown3"), legend.text = T)
barplot(table(dat$geschlecht, dat$programmierkenntnisse), col = c("black", "rosybrown3"), legend.text = T, beside = T)
table(dat$geschlecht, dat$programmierkenntnisse) / nrow(dat$programmierkenntnisse)
barplot(prop.table(table(dat$geschlecht,dat$programmierkenntnisse)), col = c("black", "rosybrown3"), legend.text = T, beside = T)
barplot(prop.table(table(dat$geschlecht,dat$programmierkenntnisse), margin = 1), col = c("black", "rosybrown3"), legend.text = T, beside = T)
barplot(prop.table(table(dat$geschlecht,dat$programmierkenntnisse), margin = 2), col = c("black", "rosybrown3"), legend.text = T, beside = T)
t_vergleich <- prop.table(table(dat$geschlecht,dat$programmierkenntnisse), margin = 2)
t_vergleich
t_vergleich <- prop.table(table(dat$geschlecht,dat$programmierkenntnisse), margin = 1)
t_vergleich
barplot(t_vergleich, col = c("black", "rosybrown3"), legend.text = T, beside = T)
barplot(t_vergleich, col = c("black", "rosybrown3"), legend.text = T, beside = T, ylab = "Relative Häufigkeit")
# ---- Aufgabe 1 ----
csv_path <- paste(getwd(), '/data/BEV322OD3222.csv')
dat <- read.csv('./data/BEV322OD3222.csv')
unbekannt <- dat[dat$SexLang == "unbekannt",]
unbekannt_schweizer <- unbekannt[unbekannt$HerkunftCd == 1,]
unbekannt_ausländer <- unbekannt[unbekannt$HerkunftCd == 2,]
?plot
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (bis 1933)")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (ab 1933, bis 2022)")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
unbekannt_gesamt <- unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir
bekannt_gesamt <- bev_schweizer_m$AnzBestWir + bev_schweizer_w$AnzBestWir + bev_ausländer_m$AnzBestWir + bev_ausländer_w$AnzBestWir
gesamt_bev <- c(unbekannt_gesamt, bekannt_gesamt)
median(gesamt_bev)
mean(gesamt_bev)
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
str(dat)
# ---- Faktoren ----
dat <- readRDS('./data/datDS23t.rds')
str(dat$programmierkenntnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
summary(prog_kentnisse)
prog_kentnisse <- factor(dat$programmierkenntnisse)
summary(prog_kentnisse)
prog_kentnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'))
summary(prog_kentnisse)
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'))
summary(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
levels(prog_kentnisse)
nlevels(prog_kentnisse)
str(prog_kentnisse)
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'), ordered = T)
summary(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
unique(dat$programmierkenntnisse)
# ---- Faktoren ----
dat <- readRDS('./data/datDS23t.rds')
str(dat$programmierkenntnisse)
unique(dat$programmierkenntnisse)
prog_kentnisse <- factor(dat$programmierkenntnisse)
levels(prog_kentnisse)
nlevels(prog_kentnisse)
str(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
summary(prog_kentnisse)
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'), ordered = T)
summary(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
dat$programmierkenntnisse
dat$programmierkenntnisse[dat$programmierkenntnisse == "nicht vorhanden",] <- "keine"
dat$programmierkenntnisse
dat$programmierkenntnisse <- as.character(dat$programmierkenntnisse)
dat$programmierkenntnisse[dat$programmierkenntnisse == "nicht vorhanden",] <- "keine"
dat$programmierkenntnisse
dat$programmierkenntnisse[dat$programmierkenntnisse == "nicht vorhanden",] <- "keine"
dat$programmierkenntnisse
dat$programmierkenntnisse[dat$programmierkenntnisse == "nicht vorhanden"] <- "keine"
dat$programmierkenntnisse
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c("keine", "gering", "mittel", "gross"), ordered = T)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
# ---- Faktoren ----
dat <- readRDS('./data/datDS23t.rds')
str(dat$programmierkenntnisse)
unique(dat$programmierkenntnisse)
prog_kentnisse <- factor(dat$programmierkenntnisse)
levels(prog_kentnisse)
nlevels(prog_kentnisse)
str(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
summary(prog_kentnisse)
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, levels = c('nicht vorhanden', 'gering', 'mittel', 'gross'), ordered = T)
dat$programmierkenntnisse
summary(prog_kentnisse)
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
# Levels umbenennen: Variante 2
dat$programmierkenntnisse <- factor(dat$programmierkenntnisse, labels = c("keine", "gering", "mittel", "gross"))
dat$programmierkenntnisse
boxplot(anreisezeit_an_die_zhaw ~ programmierkenntnisse, data = dat)
# ---- Kategorien ----
range(dat$alter, na.rm = T)
dat$alter_kat <- cut(dat$alter, breaks = c(18, 20, 25, 30, 45))
boxplot(anreisezeit_an_die_zhaw ~ alter_kat, data = dat)
dat$alter_kat <- cut(dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
boxplot(anreisezeit_an_die_zhaw ~ alter_kat, data = dat)
dat$alter_kat <- cut(dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
# ---- Kategorien ----
range(dat$alter, na.rm = T)
dat$alter_kat <- cut(dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
boxplot(anreisezeit_an_die_zhaw ~ alter_kat, data = dat)
dat$alter_kat <- cut(dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
dat$alter_kat <- cut(x=dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
dat$alter
dat$alter_kat <- cut(x=dat$alter, breaks = c(18, 20, 25, 30, 45), labels = c("jung", "mittel", "älter", "alt", "rock"))
dat$alter_kat <- cut(x=dat$alter, breaks = c(18, 20, 25, 30, 45),
labels = c("jung", "mittel", "älter", "alt", "rock"))
dat$alter_kat <- cut(x=dat$alter, breaks = c(18, 20, 25, 30, 45),
labels = c("jung", "mittel", "älter", "alt", "rock"))
dat$alter_kat <- cut(x=dat$alter, breaks = c(18, 20, 25, 30, 45),
labels = c("jung", "mittel", "älter", "alt"))
boxplot(anreisezeit_an_die_zhaw ~ alter_kat, data = dat)
install.packages('tidyverse', dependencies = T)
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
ggplot2::ggplot(dat, aes(y = koerpergroesse, geschlecht))
ggplot2::ggplot(dat, aes(y = koerpergroesse, x= geschlecht))
ggplot2::ggplot(dat, aes(y = koerpergroesse, x= geschlecht))+geom_boxplot()
.libPaths()
source("~/Projects/School-Projects/zhaw/expd-1/Prakt_1910.R")
str(data)
# ---- Aufgabe 1 ----
data <- read.csv('./data/BEV390OD3903.csv')
str(data)
boxplot(table(data$SexLang))
barplot(table(data$SexLang))
man <- data[data$SexKurz == "M",]
woman <- data[data$SexKurz == "W",]
barplot(table(c(man, woman)))
barplot(table(man))
m_w_data <- factor(man$AnzBestWir, woman$AnzBestWir)
m_w_data <- factor(c(man$AnzBestWir, woman$AnzBestWir)
m_w_data <- factor(c(man$AnzBestWir, woman$AnzBestWir))
boxplot(m_w_data)
m_w_data <- factor(c(man$AnzBestWir, woman$AnzBestWir))
boxplot(m_w_data)
sum(man$AnzBestWir)
sum(woman$AnzBestWir)
sum_woman <- sum(woman$AnzBestWir)
sum_man <- sum(man$AnzBestWir)
m_w_fact <- c(sum_man, sum_woman)
barplot(m_w_data)
barplot(table(m_w_data))
woman <- data[data$SexKurz == "W" & data$StichtagDatJahr == 1993,]
man <- data[data$SexKurz == "M" & data$StichtagDatJahr == 1993,]
woman <- data[data$SexKurz == "W" & data$StichtagDatJahr == 1993,]
man
man_sum <- man$AnzBestWir
man_sum <- sum(man$AnzBestWir)
woman_sum <- sum(woman$AnzBestWir)
man_sum
sums_1993 <- c(man_sum, woman_sum)
sums_1993
dat <- as.data.frame(sums_1993, row.names = c("1993"))
dat
dat <- as.data.frame(sums_1993, row.names = c("1993"))
dat
dat <- as.data.frame(sums_1993, row.names = c("1993"))
dat <- as.data.frame(sums_1993)
dat
barplot(dat)
barplot(dat)
dat <- matrix(sums_1993, nrow=1, ncol = 2)
dat
barplot(dat)
colnames("Männer", "Frauen")
colnames(dat) <- c("Männer", "Frauen")
barplot(dat)
barplot(dat, main = "Bestand Männer und Frauen in der Stadt Zürich, Jahr: 1993")
barplot(dat, main = "Bestand Männer und Frauen in der Stadt Zürich, Jahr: 1993", col = c("red", "blue"))
barplot(dat, main = "Bestand Männer und Frauen in der Stadt Zürich, Jahr: 1993", col = c("red"))
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (bis 1933)")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (ab 1933, bis 2022)")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
barplot(dat, main = "Bestand Männer und Frauen in der Stadt Zürich, Jahr: 1993", col = c("red"))
